{
  "name": "angular-extender",
  "description": "Extend AngularJS applications by injecting module dependencies at build time",
  "version": "0.1.1",
  "author": {
    "name": "Mario Casciaro"
  },
  "homepage": "https://github.com/mariocasciaro/angular-extender",
  "repository": {
    "type": "git",
    "url": "git://github.com/mariocasciaro/angular-extender.git"
  },
  "dependencies": {
    "ast-traverse": "~0.1.1",
    "alter": "~0.2.0",
    "simple-is": "~0.2.0",
    "esprima": "~1.0.4"
  },
  "devDependencies": {
    "mocha": "~1.13.0",
    "chai": "~1.8.0",
    "mocha-lcov-reporter": "~0.0.1",
    "coveralls": "~2.3.0",
    "istanbul": "~0.1.44"
  },
  "scripts": {
    "test": "./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha test/*.js --report html -- -R spec"
  },
  "keywords": [
    "angularjs",
    "angular",
    "extensibility",
    "plugin"
  ],
  "license": "MIT",
  "readme": "# Synopsis\n\nExtend AngularJS applications by injecting module dependencies  at build time (using static code transformations).\n\nFor example transforms this:\n```javascript\nangular.module('moduleName', ['dependency']);\n```\n\ninto that\n\n```javascript\nangular.module('moduleName', ['dependency', 'additionalDependency']);\n```\n\n[![NPM](https://nodei.co/npm/angular-extender.png?downloads=true)](https://nodei.co/npm/angular-extender/)\n\n[![Build Status](https://travis-ci.org/mariocasciaro/angular-extender.png)](https://travis-ci.org/mariocasciaro/angular-extender)\n[![Coverage Status](https://coveralls.io/repos/mariocasciaro/angular-extender/badge.png)](https://coveralls.io/r/mariocasciaro/angular-extender)\n\n## Motivation\n\nNowadays having a project using [Grunt](http://gruntjs.com/) (or any other similar tool) for workflow automation and asset management is not uncommon. So the idea with this small library is to provide a way to implement a simple **plugin system** for AngularJS applications using only static code transformations. This has two main advantages (compared to extending the module with dynamic tricks):\n* Keeps the code clean from boilerplate\n* The modules can be still declared in any order.\n\nThe main use case for such a system is when you have an AngularJS based application and you want to **allow third party modules (plugins) to exend you core app** without hardcoding those new dependencies. \n\n## Usage\n\n```javascript\nvar angularExtend = require('angular-extend');\n\nvar src = \"angular.module('moduleName', ['aModule']);\";\nvar res = angularExtend(src, {moduleName: ['aPlugin']});\n/*\nres.out will be:\n\nangular.module('moduleName', ['aModule', \"aPlugin\"]);\n\nres.changed is a boolean and will tell if any extension was applied at all.\n*/\n```\n\n## Grunt plugin\n\nA grunt plugin using this library will be soon available at https://github.com/mariocasciaro/grunt-angular-extender\n\n## Limitations\n\nThe transformation will work only if you follow the convention of delaring modules like\n```\nangular.module(<string>, [<strings>]);\n```\nUsing variables or functions to define the module name, will fail.\n\n## Contributors\n\n* [Mario Casciaro](https://github.com/mariocasciaro) - Creator/Maitainer - Twitter [@mariocasciaro](https://twitter.com/mariocasciaro)\n\nThanks to [olov](https://github.com/olov) and his project [ng-annotate](https://github.com/olov/ng-annotate) for the \ninspiration he gave me to build this little tool.\n\n-----\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/mariocasciaro/angular-extender/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mariocasciaro/angular-extender/issues"
  },
  "_id": "angular-extender@0.1.1",
  "dist": {
    "shasum": "356678c14b3cb405bfe2c6c0d635df99e8284e1a"
  },
  "_from": "angular-extender@~0.1.1",
  "_resolved": "https://registry.npmjs.org/angular-extender/-/angular-extender-0.1.1.tgz"
}
