{
  "name": "multistream-merge",
  "description": "Merge multiple streams into one (using through2 and hence Streams2)",
  "version": "0.1.0",
  "author": {
    "name": "Mario Casciaro"
  },
  "homepage": "https://github.com/mariocasciaro/multistream-merge",
  "repository": {
    "type": "git",
    "url": "git://github.com/mariocasciaro/multistream-merge.git"
  },
  "devDependencies": {
    "readable-stream": "~1.1.10",
    "chai": "~1.9.0",
    "mocha": "~1.17.1"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/_mocha test.js -R spec"
  },
  "keywords": [
    "stream",
    "streams",
    "merge",
    "combine"
  ],
  "license": "MIT",
  "dependencies": {
    "through2": "~0.4.1",
    "lodash.isplainobject": "~2.4.1"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/mariocasciaro/multistream-merge.png?branch=master)](https://travis-ci.org/mariocasciaro/multistream-merge) \n[![NPM version](https://badge.fury.io/js/multistream-merge.png)](http://badge.fury.io/js/multistream-merge) \n[![Dependency Status](https://gemnasium.com/mariocasciaro/multistream-merge.png)](https://gemnasium.com/mariocasciaro/multistream-merge)\n\n# multistream-merge\n\n> Merge multiple streams into one, using Streams2.\n\nThe order of the emitted chunks/objects is random in the sense that this module does not enforce any ordering on the emitted data.\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/multistream-merge).\n\n```\nnpm install multistream-merge\n```\n\n## Examples\n\n### Buffer mode\n```js\nvar multistreamMerge = require('multistream-merge');\n\nmultistreamMerge(childProcess.stdout, childProcess.stderr)\n    .pipe(fs.createWriteStream('output.log'));\n```\n\n### Object mode\n```js\nvar gulp = require('gulp');\nvar multistreamMerge = require('multistream-merge');\n\nmultistreamMerge.obj(gulp.src('assets/**'), gulp.src('src/**'))\n    .pipe(gulp.dest('out/'));\n```\n\n## Documentation\n\n### multistreamMerge([options], readableStreams)\n\n#### options\nType: `Object`\n\nAvailable options:\n* `objectMode`: `false`. Set the objectMode options for the merge stream.\n\n#### readableStreams\nType: `...ReadableStream` | `ReadableStream[]`\n\nThe input streams to merge\n\n### multistreamMerge.obj(readableStreams)\n\nConvenience method to create a merge stream with object mode enabled.\n\n## License\n\n[MIT](http://en.wikipedia.org/wiki/MIT_License) @ Mario Casciaro\n\n-----\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/mariocasciaro/multistream-merge/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mariocasciaro/multistream-merge/issues"
  },
  "_id": "multistream-merge@0.1.0",
  "dist": {
    "shasum": "8489f4f8a5f68b6b87704d744a2dd58586087667"
  },
  "_from": "multistream-merge@~0.1.0",
  "_resolved": "https://registry.npmjs.org/multistream-merge/-/multistream-merge-0.1.0.tgz"
}
